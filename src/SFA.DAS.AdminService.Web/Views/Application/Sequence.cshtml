@using SFA.DAS.AssessorService.ApplyTypes;
@using SFA.DAS.AssessorService.Domain.Consts;
@using SFA.DAS.AdminService.Web.Helpers;
@using SFA.DAS.AdminService.Common.Extensions

@model SFA.DAS.AdminService.Web.ViewModels.Apply.Applications.SequenceViewModel

@{
    ViewBag.Title = "Application overview";
    var Fragment = ApplicationReviewHelpers.ApplicationFragment(Model.ReviewStatus);
}

<a class="govuk-back-link" 
   asp-action="@Model.BackAction" 
   asp-controller="@Model.BackController" 
   asp-route-organisationId="@Model.BackOrganisationId" 
   asp-fragment="@Fragment">Back</a>

<main class="govuk-main-wrapper " id="main-content" role="main">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">

            @if (Model.Sections == null)
            {
                <h1 class="govuk-heading-xl">Sequence not active</h1>
            }
            else
            {
                <h1 class="govuk-heading-xl">Application overview</h1>

                <dl class="govuk-summary-list govuk-!-margin-bottom-9">
                    @if (!string.IsNullOrWhiteSpace(Model.ApplicationReference))
                    {
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">Application reference</dt>
                            <dd class="govuk-summary-list__value">@Model.ApplicationReference</dd>
                        </div>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.OrganisationName) && Model.IsWithdrawal)
                    {
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">Organisation name</dt>
                            <dd class="govuk-summary-list__value">@Model.OrganisationName</dd>
                        </div>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Standard) && Model.SequenceNo == ApplyConst.STANDARD_SEQUENCE_NO)
                    {
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">Standard</dt>
                            <dd class="govuk-summary-list__value">@Model.Standard</dd>
                        </div>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.StandardWithReference) && Model.SequenceNo == ApplyConst.STANDARD_WITHDRAWAL_SEQUENCE_NO)
                    {
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">Details</dt>
                            <dd class="govuk-summary-list__value">@Model.StandardWithReference</dd>
                        </div>
                    }
                    @if (Model.SequenceNo == ApplyConst.ORGANISATION_WITHDRAWAL_SEQUENCE_NO)
                    {
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">Details</dt>
                            <dd class="govuk-summary-list__value">Withdrawal from register</dd>
                        </div>
                    }
                    @if (!Model.IsWithdrawal)
                    {
                        @if (!string.IsNullOrWhiteSpace(Model.LegalName))
                        {
                            <div class="govuk-summary-list__row">
                                <dt class="govuk-summary-list__key">Registered name</dt>
                                <dd class="govuk-summary-list__value">@Model.LegalName</dd>
                            </div>
                        }
                        @if (!string.IsNullOrWhiteSpace(Model.TradingName) || !string.IsNullOrWhiteSpace(Model.ProviderName))
                        {
                            <div class="govuk-summary-list__row">
                                <dt class="govuk-summary-list__key">Trading name</dt>
                                <dd class="govuk-summary-list__value">@(Model.TradingName ?? Model.ProviderName)</dd>
                            </div>
                        }
                    }
                    @if (Model.Ukprn.HasValue)
                    {
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">UKPRN</dt>
                            <dd class="govuk-summary-list__value">@Model.Ukprn</dd>
                        </div>
                    }
                    @if (Model.FinancialDueDate.HasValue)
                    {
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">Financial due date</dt>
                            <dd class="govuk-summary-list__value">@Model.FinancialDueDate.ToSfaShortDateString()</dd>
                        </div>
                    }
                    @if (Model.IsWithdrawal)
                    {
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">Contact details</dt>
                            <dd class="govuk-summary-list__value">
                                @Model.ContactName
                                <br />
                                @Model.ContactEmail
                            </dd>
                        </div>
                    }
                </dl>

                @if (!string.IsNullOrWhiteSpace(Model.CompanyNumber))
                {
                    <p class="govuk-body">
                        <a class="govuk-link" target="_blank" href="@string.Format("https://beta.companieshouse.gov.uk/company/{0}", Model.CompanyNumber)">View companies house information</a>
                    </p>
                    <hr class="govuk-section-break govuk-section-break--l govuk-section-break--visible">
                }

                <ul class="govuk-list">
                    @foreach (var applicationSection in Model.Sections.OrderBy(s => s.SectionNo))
                    {
                        if (applicationSection.SequenceNo == ApplyConst.ORGANISATION_SEQUENCE_NO && 
                            applicationSection.SectionNo == ApplyConst.FINANCIAL_DETAILS_SECTION_NO && 
                            !(Model.FinancialReviewStatus == FinancialReviewStatus.Graded || Model.FinancialReviewStatus == FinancialReviewStatus.Approved || Model.FinancialReviewStatus == FinancialReviewStatus.Rejected))
                        {
                            // NOTE: FHA Section should only be shown if it has been Graded, Approved or Rejected. See ON-1277
                            continue;
                        }
                        <li>
                            <h2 class="govuk-heading-m">
                                <a class="govuk-link"
                                   asp-action="Section"
                                   asp-controller="Application" ,
                                   asp-route-applicationId="@Model.ApplicationId"
                                   asp-route-sequenceNo="@applicationSection.SequenceNo"
                                   asp-route-sectionNo="@applicationSection.SectionNo"
                                   asp-route-backAction="@Model.BackAction"
                                   asp-route-backController="@Model.BackController"
                                   asp-route-backOrganisationId="@Model.BackOrganisationId">
                                    @applicationSection.LinkTitle
                                </a>
                            </h2>
                            <span id="company-details-hint" class="govuk-hint">
                                @applicationSection.QnAData.Pages.Count(x => x.Complete == true) of @applicationSection.QnAData.Pages.Count(x => x.Active) questions completed
                            </span>

                            @if (applicationSection.QnAData.Pages.Any(p => p.HasNewFeedback))
                            {
                                <div class="govuk-tag">
                                    Feedback added
                                </div>
                            }

                            @if (applicationSection.QnAData.RequestedFeedbackAnswered == true)
                            {
                                <div class="govuk-tag">
                                    Answer updated
                                </div>
                            }

                            @* NOTE: Not too sure this is the appropriate way to check, but it works for now :) *@
                            @if (Model.ApplySections.Any(section => section.SectionId == applicationSection.Id && section.Status == ApplicationSectionStatus.Evaluated))
                            {
                                <div class="govuk-tag">
                                    Evaluated
                                </div>
                            }
                            <hr class="govuk-section-break govuk-section-break--l govuk-section-break--visible">
                        </li>
                    }
                </ul>

                @if (Model.ApplySections.All(s => s.Status == ApplicationSectionStatus.Evaluated || s.NotRequired))
                {
                    if (!Model.GovernanceRequired)
                    {
                        <form class="js-disable-on-submit"
                                asp-controller="Application"
                                asp-action="Assessment"
                                asp-route-applicationId="@Model.ApplicationId"
                                asp-route-sequenceNo="@Model.SequenceNo"
                                asp-route-backAction="@Model.BackAction"
                                asp-route-backController="@Model.BackController"
                                asp-route-backOrganisationId="@Model.BackOrganisationId"
                                method="get">
                            <button class="govuk-button" type="submit">Complete review</button>
                        </form>
                    }
                    else
                    {
                        <form class="js-disable-on-submit" 
                              asp-controller="Application"
                              asp-action="AssessmentWithGovernanceRecommendation"
                              asp-route-applicationId="@Model.ApplicationId"
                              asp-route-sequenceNo="@Model.SequenceNo"
                              asp-route-backAction="@Model.BackAction"
                              asp-route-backController="@Model.BackController"
                              asp-route-backOrganisationId="@Model.BackOrganisationId">
                        
                            <div class="govuk-form-group" sfa-anyvalidationerror-class="govuk-form-group--error">

                                <legend>
                                    <h2 class="govuk-heading-l">
                                        What's your recommendation for this withdrawal?
                                    </h2>
                                </legend>

                                <span class="govuk-error-message" asp-validation-for="Recommendation.SelectedRecommendation"></span>
                                <span class="govuk-error-message" asp-validation-for="Recommendation.ApprovedInternalComments"></span>
                                <span class="govuk-error-message" asp-validation-for="Recommendation.RejectedInternalComments"></span>

                                <div class="govuk-radios govuk-radios--conditional" data-module="radios">
                                    <div class="govuk-radios__item">
                                        <input class="govuk-radios__input" id="approved" data-aria-controls="approved-conditional" type="radio" name="Recommendation.SelectedRecommendation" value="@(GovernanceRecommendationTypes.Approved)" @(Model.Recommendation.SelectedRecommendation == GovernanceRecommendationTypes.Approved ? "checked" : "") />
                                        <label class="govuk-label govuk-radios__label" for="approved">Approved</label>
                                    </div>

                                    <div class="govuk-radios__conditional govuk-radios__conditional--hidden" id="approved-conditional">
                                        <div class="govuk-form-group">
                                            <label class="govuk-label" for="Recommendation.ApprovedInternalComments">Add internal comments</label>
                                            <textarea class="govuk-textarea" rows="4" name="Recommendation.ApprovedInternalComments" id="Recommendation.ApprovedInternalComments" sfa-validation-for="Recommendation.ApprovedInternalComments" sfa-validationerror-class="govuk-input--error"></textarea>
                                        </div>
                                    </div>

                                    <div class="govuk-radios__item">
                                        <input class="govuk-radios__input" id="rejected" data-aria-controls="rejected-conditional" type="radio" name="Recommendation.SelectedRecommendation" value="@(GovernanceRecommendationTypes.Rejected)" @(Model.Recommendation.SelectedRecommendation == GovernanceRecommendationTypes.Rejected ? "checked" : "") />
                                        <label class="govuk-label govuk-radios__label" for="approved">Rejected</label>
                                    </div>

                                    <div class="govuk-radios__conditional govuk-radios__conditional--hidden" id="rejected-conditional">
                                        <div class="govuk-form-group">
                                            <label class="govuk-label" for="Recommendation.RejectedInternalComments">Add internal comments</label>
                                            <textarea class="govuk-textarea" rows="4" name="Recommendation.RejectedInternalComments" id="Recommendation.RejectedInternalComments" sfa-validation-for="Recommendation.ApprovedInternalComments" sfa-validationerror-class="govuk-input--error"></textarea>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <button class="govuk-button" type="submit">Complete review</button>
                        </form>
                    }
                }
            }
            
            <p class="govuk-body">
                <a class="govuk-link"
                   asp-action="@Model.BackAction"
                   asp-controller="@Model.BackController"
                   asp-route-organisationId="@Model.BackOrganisationId"
                   asp-fragment="@Fragment">Return to @(Model.IsWithdrawal ? "withdrawal " : "")applications</a>
            </p>
        </div>`
    </div>
</main>